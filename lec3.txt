математический сопроцессор

можно будет фигачить даблы!

раньше нельзя было вычислять числа с плавающей точкой.
был процессор i80286 и сопроцессор i80287

начиная с 486DX это уже внутри процессора

* single precision (float) --- 32бит
* double precision (double) --- 64бит
* extended --- 80бит

Microsoft: long double == double
Можно сделать его extended

int и uint по-разному преобразуются в float по скорости! сильно различаются!

двоично-десятичые числа: полубайт хранит одну десятичную цифру.

BCD80

регистры ST0-ST7 R0-R7

Различия архитектур всяких Intel, ARM, ...

FPV
CR, SR, TW
FIP, FDP

Деление на ноль в процессоре - плохо и падаем
В сопроцессоре - ничего не падает

FLD/FILD/FBDL --- числа с плав точкой/целые/дабл (загрузить их)
FST[P]/FIST[P]/FBSTP --- С P выталкивают из стека 

FXCH --- свап вершины стека с чем-то

Все команды, которые оперируют несколькими аргументами, оперируют вершиной и
ещё чем-то

Все команды без аргумента оперируют с вершиной стека и, возможно, ST1

Команды сравнения

FCMOV[cc] cc --- условие

FCOM --- сравнение

Результат не в CFLAGS, а в регистре флагов сопроцессора

FSTSW, SAHF --- перевод флагов сопроцессора во флаги процессора

FUCOM --- что-то тоже с флагами
FICOM [память] --- сравнить с константами в памяти. ставит флаги сопроцессора

FCOM(P(P)) 

FCOMI(P)
FUCOMI(P) --- сравнения, хорошие, результат сразу в CFLAGS

Сложение

F[I]ADD[P]

FADD ST(0), ST(1)
FADD ST(1), ST(0)

Кроме вычитания есть ещё обратное вычитание

F[I]SUB[R][P] --- R -- обратное

F[I]MUL[P]
F[I]DIV[R][P]

FREM/FREM1 --- остаток. ИЩЕТСЯ ВЫЧИТАНИЕМ ДО 64 РАЗ!!!

Теперь о хорошем

Есть набор команд тригонометрии
FSIN/FCOS/FSINCOS :: вершина стека -> синус/косинус/синус и косинус ---
заменяется вершина стека
FPTAN/FPATAN

FLD[1|Z|PI] --- положить единицу, нолик, пи

FINCSTP/FDECSTP

FFREE

FNOP --- ничего не делает на сопроцессоре




