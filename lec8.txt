
mov [a1], eax
mov [a2], ebx

это будет выполнено в таком же порядке. Однако, есть процессоры, где это не так

однако, 

1 : mov [a1], eax
2 : mov [a2], ecx
3 : mov edx, [a3]

тут 3 может переставлено перед 1 или 2. однако, полной клиники не будет:
mov [a1], reg1
mov reg2, [a1] --- менять не будет


если мы хотим, чтобы команды выполнялись прям так, как написано, надо сказать об этом процессору
* например, команда с префиксом lock. 
* или команда cpuid. Она - разделитель. Всё, что идёт до, должно быть выполнено до, после - после
* или mfence. чуть менее строгий cpuid. Только по обращениям к памяти

Почему команды lock * и xchg тяжёлые?
    рушится конвейер
даже десяток команд без lock будут работать быстрее одной с lock

* atom быстро выполняет команды синхронизации (в терминах атома)
** потому что тупой

volatile


===================================
============ВИРТУАЛИЗАЦИЯ==========
===================================

гипервизор - позволяет запускать несколько операционных систем сразу.

* цель - уплотнение серверов. 
** можно на одну крутую железку поставить сразу много операционок


AMD-подход к виртуализации
AMD-V (Pacifica)

«Даже этот наш уродский mail.ru меньше, чем AMD»

команда vmrun *ax -- запускает на выполнение виртуальную машину, которая описывается блоком VMCB и оно работает

VMCB определяет, по каким причинам 
VMMCALL (без параметров) -- [VMCALL делает почти то же самое]

VMSAVE *ax
VMLOAD *ax
CLGI/STGI
INVPLGA
SKINIT eax - немного не о том (thrusted computing)

Intel -- Intel VT (Vanderpool)
VMXON m64 -- по этому адресу процессор имеет право сохранять что-нибудь. или не сохранять
VMXOFF

VMCP -- структурка с информацией о виртуальной машиной. Вся фигня ниже нужна для работы с ней
VMCLEAR m64
VMPTRLD m64
VMPTRST m64
VMREAD r/m64 m64
VMWRITE m64 r/m64

VMLAUNCH --- запустить выбранную виртуальную машину
продолжить машину, из которой мы вывалились в гипервизор: VMRESUME

VMCALL - вывалиться из виртуальной машины в гипервизор. Не VMMCALL, как у AMD

виртуализацию можно отключить или закрыть паролем.
у процессора есть спецрегистры. Туда можно записать значение - пароль на систему виртуализацию
записать 0 - отключение до аппаратной перезагрузки

интел не поддерживает реальный режим в виртуализации. в нём только защищённый режим.
запустить ничего нельзя :)
гипервизору приходится его эмулировать

=============
второй уровень страничной адресации

при запуске виртуальной машины она хочет страничную адресацию.
она может взять и снести кусок гипервизора, попытавшись выделить память.
intel: попытки переписать табличку маршрутизации приводит к её пересчёту. скорость пичалька
AMD: введён второй уровень страничной адресации. 
* SEG → off → линейный адрес --- было
* трансляция виртуального физического адресного пространства в физическое физическое


DMA -- Direct Memory Access ---
* устройства сами пишут в память, не спрашивая процессор

DMA с виртуализацией не дружит :( адреса виртуальные не совпадают с физическими
* ос может попросить устройство куда-то что-то записать, а потом вылезти из своей песочницы и убежать

но DMA очень хочется


